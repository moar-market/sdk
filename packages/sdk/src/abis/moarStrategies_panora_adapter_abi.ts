// This file is auto-generated by the generate-abis.ts script
export const moarStrategies_panora_adapter_abi = {
  "address": "0x0",
  "name": "panora_adapter",
  "friends": [
    "0xc9613ed6276f7c70a5eabdef237dc57ea07a72f563d15cd998dc31ebe6cc0db5::router"
  ],
  "exposed_functions": [
    {
      "name": "execute_strategy",
      "visibility": "friend",
      "is_entry": false,
      "is_view": false,
      "generic_type_params": [
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        },
        {
          "constraints": []
        }
      ],
      "params": [
        "&signer",
        "u8",
        "0x1::copyable_any::Any"
      ],
      "return": [
        "vector<0x1::object::Object<0x1::fungible_asset::Metadata>>",
        "0x1::option::Option<u8>",
        "address"
      ]
    },
    {
      "name": "create_swap_inputs",
      "visibility": "public",
      "is_entry": false,
      "is_view": true,
      "generic_type_params": [],
      "params": [
        "u64",
        "u8",
        "vector<u8>",
        "vector<vector<vector<u8>>>",
        "vector<vector<vector<u64>>>",
        "vector<vector<vector<bool>>>",
        "vector<vector<u8>>",
        "vector<vector<vector<address>>>",
        "vector<vector<address>>",
        "vector<vector<address>>",
        "0x1::option::Option<vector<vector<vector<vector<vector<u8>>>>>>",
        "vector<vector<vector<u64>>>",
        "0x1::option::Option<vector<vector<vector<u8>>>>",
        "address",
        "vector<u64>",
        "u64",
        "u64",
        "address",
        "bool"
      ],
      "return": [
        "0xc9613ed6276f7c70a5eabdef237dc57ea07a72f563d15cd998dc31ebe6cc0db5::panora_adapter::SwapInputs",
        "0x1::copyable_any::Any"
      ]
    }
  ],
  "structs": [
    {
      "name": "PanoraSwapEvent",
      "is_native": false,
      "is_event": true,
      "abilities": [
        "drop",
        "store"
      ],
      "generic_type_params": [],
      "fields": [
        {
          "name": "credit_account_address",
          "type": "address"
        },
        {
          "name": "asset_metadata_in",
          "type": "address"
        },
        {
          "name": "amount_in",
          "type": "u64"
        },
        {
          "name": "asset_metadata_out",
          "type": "address"
        },
        {
          "name": "amount_out",
          "type": "u64"
        },
        {
          "name": "is_trade",
          "type": "bool"
        },
        {
          "name": "trade_value",
          "type": "u64"
        }
      ]
    },
    {
      "name": "SwapInputs",
      "is_native": false,
      "is_event": false,
      "abilities": [
        "copy",
        "drop",
        "store"
      ],
      "generic_type_params": [],
      "fields": [
        {
          "name": "arg3",
          "type": "u64"
        },
        {
          "name": "arg4",
          "type": "u8"
        },
        {
          "name": "arg5",
          "type": "vector<u8>"
        },
        {
          "name": "arg6",
          "type": "vector<vector<vector<u8>>>"
        },
        {
          "name": "arg7",
          "type": "vector<vector<vector<u64>>>"
        },
        {
          "name": "arg8",
          "type": "vector<vector<vector<bool>>>"
        },
        {
          "name": "withdraw_case",
          "type": "vector<vector<u8>>"
        },
        {
          "name": "arg10",
          "type": "vector<vector<vector<address>>>"
        },
        {
          "name": "fa_addresses",
          "type": "vector<vector<address>>"
        },
        {
          "name": "arg12",
          "type": "vector<vector<address>>"
        },
        {
          "name": "arg13",
          "type": "0x1::option::Option<vector<vector<vector<vector<vector<u8>>>>>>"
        },
        {
          "name": "arg14",
          "type": "vector<vector<vector<u64>>>"
        },
        {
          "name": "arg15",
          "type": "0x1::option::Option<vector<vector<vector<u8>>>>"
        },
        {
          "name": "arg16",
          "type": "address"
        },
        {
          "name": "from_token_amounts",
          "type": "vector<u64>"
        },
        {
          "name": "arg18",
          "type": "u64"
        },
        {
          "name": "arg19",
          "type": "u64"
        },
        {
          "name": "arg20",
          "type": "address"
        },
        {
          "name": "is_trade",
          "type": "bool"
        }
      ]
    }
  ]
} as const;
